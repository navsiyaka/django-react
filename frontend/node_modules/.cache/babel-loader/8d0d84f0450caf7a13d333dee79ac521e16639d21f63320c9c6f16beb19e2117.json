{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport warning from 'warning';\nimport { getDisplayName } from '@material-ui/utils';\nfunction mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n    newClasses = options.newClasses,\n    Component = options.Component;\n  if (!newClasses) {\n    return baseClasses;\n  }\n  var nextClasses = _extends({}, baseClasses);\n  if (process.env.NODE_ENV !== 'production' && typeof newClasses === 'string') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, [\"Material-UI: the value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n')) : void 0;\n    return baseClasses;\n  }\n  Object.keys(newClasses).forEach(function (key) {\n    process.env.NODE_ENV !== \"production\" ? warning(baseClasses[key] || !newClasses[key], [\"Material-UI: the key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n')) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!newClasses[key] || typeof newClasses[key] === 'string', [\"Material-UI: the key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n')) : void 0;\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}\nexport default mergeClasses;","map":{"version":3,"names":["_extends","warning","getDisplayName","mergeClasses","options","arguments","length","undefined","baseClasses","newClasses","Component","nextClasses","process","env","NODE_ENV","concat","join","Object","keys","forEach","key"],"sources":["/app/frontend/node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport warning from 'warning';\nimport { getDisplayName } from '@material-ui/utils';\n\nfunction mergeClasses() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var baseClasses = options.baseClasses,\n      newClasses = options.newClasses,\n      Component = options.Component;\n\n  if (!newClasses) {\n    return baseClasses;\n  }\n\n  var nextClasses = _extends({}, baseClasses);\n\n  if (process.env.NODE_ENV !== 'production' && typeof newClasses === 'string') {\n    process.env.NODE_ENV !== \"production\" ? warning(false, [\"Material-UI: the value `\".concat(newClasses, \"` \") + \"provided to the classes prop of \".concat(getDisplayName(Component), \" is incorrect.\"), 'You might want to use the className prop instead.'].join('\\n')) : void 0;\n    return baseClasses;\n  }\n\n  Object.keys(newClasses).forEach(function (key) {\n    process.env.NODE_ENV !== \"production\" ? warning(baseClasses[key] || !newClasses[key], [\"Material-UI: the key `\".concat(key, \"` \") + \"provided to the classes prop is not implemented in \".concat(getDisplayName(Component), \".\"), \"You can only override one of the following: \".concat(Object.keys(baseClasses).join(','), \".\")].join('\\n')) : void 0;\n    process.env.NODE_ENV !== \"production\" ? warning(!newClasses[key] || typeof newClasses[key] === 'string', [\"Material-UI: the key `\".concat(key, \"` \") + \"provided to the classes prop is not valid for \".concat(getDisplayName(Component), \".\"), \"You need to provide a non empty string instead of: \".concat(newClasses[key], \".\")].join('\\n')) : void 0;\n\n    if (newClasses[key]) {\n      nextClasses[key] = \"\".concat(baseClasses[key], \" \").concat(newClasses[key]);\n    }\n  });\n  return nextClasses;\n}\n\nexport default mergeClasses;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,SAASC,YAAYA,CAAA,EAAG;EACtB,IAAIC,OAAO,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EACpF,IAAIG,WAAW,GAAGJ,OAAO,CAACI,WAAW;IACjCC,UAAU,GAAGL,OAAO,CAACK,UAAU;IAC/BC,SAAS,GAAGN,OAAO,CAACM,SAAS;EAEjC,IAAI,CAACD,UAAU,EAAE;IACf,OAAOD,WAAW;EACpB;EAEA,IAAIG,WAAW,GAAGX,QAAQ,CAAC,CAAC,CAAC,EAAEQ,WAAW,CAAC;EAE3C,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,IAAI,OAAOL,UAAU,KAAK,QAAQ,EAAE;IAC3EG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,OAAO,CAAC,KAAK,EAAE,CAAC,0BAA0B,CAACc,MAAM,CAACN,UAAU,EAAE,IAAI,CAAC,GAAG,kCAAkC,CAACM,MAAM,CAACb,cAAc,CAACQ,SAAS,CAAC,EAAE,gBAAgB,CAAC,EAAE,mDAAmD,CAAC,CAACM,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IAC/Q,OAAOR,WAAW;EACpB;EAEAS,MAAM,CAACC,IAAI,CAACT,UAAU,CAAC,CAACU,OAAO,CAAC,UAAUC,GAAG,EAAE;IAC7CR,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,OAAO,CAACO,WAAW,CAACY,GAAG,CAAC,IAAI,CAACX,UAAU,CAACW,GAAG,CAAC,EAAE,CAAC,wBAAwB,CAACL,MAAM,CAACK,GAAG,EAAE,IAAI,CAAC,GAAG,qDAAqD,CAACL,MAAM,CAACb,cAAc,CAACQ,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,8CAA8C,CAACK,MAAM,CAACE,MAAM,CAACC,IAAI,CAACV,WAAW,CAAC,CAACQ,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IACtVJ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGb,OAAO,CAAC,CAACQ,UAAU,CAACW,GAAG,CAAC,IAAI,OAAOX,UAAU,CAACW,GAAG,CAAC,KAAK,QAAQ,EAAE,CAAC,wBAAwB,CAACL,MAAM,CAACK,GAAG,EAAE,IAAI,CAAC,GAAG,gDAAgD,CAACL,MAAM,CAACb,cAAc,CAACQ,SAAS,CAAC,EAAE,GAAG,CAAC,EAAE,qDAAqD,CAACK,MAAM,CAACN,UAAU,CAACW,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAACJ,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC;IAExV,IAAIP,UAAU,CAACW,GAAG,CAAC,EAAE;MACnBT,WAAW,CAACS,GAAG,CAAC,GAAG,EAAE,CAACL,MAAM,CAACP,WAAW,CAACY,GAAG,CAAC,EAAE,GAAG,CAAC,CAACL,MAAM,CAACN,UAAU,CAACW,GAAG,CAAC,CAAC;IAC7E;EACF,CAAC,CAAC;EACF,OAAOT,WAAW;AACpB;AAEA,eAAeR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}