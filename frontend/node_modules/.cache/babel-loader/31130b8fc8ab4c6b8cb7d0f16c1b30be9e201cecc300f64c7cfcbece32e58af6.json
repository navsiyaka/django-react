{"ast":null,"code":"function areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n  for (var i = 0; i < newInputs.length; i++) {\n    if (newInputs[i] !== lastInputs[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction memoizeOne(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = areInputsEqual;\n  }\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n  function memoized() {\n    var newArgs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newArgs[_i] = arguments[_i];\n    }\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  }\n  return memoized;\n}\nexport default memoizeOne;","map":{"version":3,"names":["areInputsEqual","newInputs","lastInputs","length","i","memoizeOne","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","memoized","newArgs","_i","arguments","apply"],"sources":["/app/frontend/node_modules/memoize-one/dist/memoize-one.esm.js"],"sourcesContent":["function areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (newInputs[i] !== lastInputs[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nexport default memoizeOne;\n"],"mappings":"AAAA,SAASA,cAAcA,CAACC,SAAS,EAAEC,UAAU,EAAE;EAC3C,IAAID,SAAS,CAACE,MAAM,KAAKD,UAAU,CAACC,MAAM,EAAE;IACxC,OAAO,KAAK;EAChB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;IACvC,IAAIH,SAAS,CAACG,CAAC,CAAC,KAAKF,UAAU,CAACE,CAAC,CAAC,EAAE;MAChC,OAAO,KAAK;IAChB;EACJ;EACA,OAAO,IAAI;AACf;AAEA,SAASC,UAAUA,CAACC,QAAQ,EAAEC,OAAO,EAAE;EACnC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IAAEA,OAAO,GAAGP,cAAc;EAAE;EACpD,IAAIQ,QAAQ;EACZ,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,UAAU;EACd,IAAIC,UAAU,GAAG,KAAK;EACtB,SAASC,QAAQA,CAAA,EAAG;IAChB,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,IAAIC,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGC,SAAS,CAACZ,MAAM,EAAEW,EAAE,EAAE,EAAE;MAC1CD,OAAO,CAACC,EAAE,CAAC,GAAGC,SAAS,CAACD,EAAE,CAAC;IAC/B;IACA,IAAIH,UAAU,IAAIH,QAAQ,KAAK,IAAI,IAAID,OAAO,CAACM,OAAO,EAAEJ,QAAQ,CAAC,EAAE;MAC/D,OAAOC,UAAU;IACrB;IACAA,UAAU,GAAGJ,QAAQ,CAACU,KAAK,CAAC,IAAI,EAAEH,OAAO,CAAC;IAC1CF,UAAU,GAAG,IAAI;IACjBH,QAAQ,GAAG,IAAI;IACfC,QAAQ,GAAGI,OAAO;IAClB,OAAOH,UAAU;EACrB;EACA,OAAOE,QAAQ;AACnB;AAEA,eAAeP,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}